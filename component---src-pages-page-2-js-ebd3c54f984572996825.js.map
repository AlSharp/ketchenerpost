{"version":3,"sources":["webpack:///./src/pages/page-2.js","webpack:///./src/components/image.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/content.js","webpack:///./src/components/footer.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","SecondPage","a","createElement","title","to","Image","react__WEBPACK_IMPORTED_MODULE_2___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","query","render","data","gatsby_image__WEBPACK_IMPORTED_MODULE_4___default","fixed","placeholderImage","childImageSharp","style","marginRight","imgStyle","margin","_public_static_d_2827433203_json__WEBPACK_IMPORTED_MODULE_1__","SEO","_ref","description","lang","meta","keywords","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","propTypes","PropTypes","string","arrayOf","object","isRequired","Header","siteTitle","react_default","backgroundColor","marginBottom","display","maxWidth","padding","components_image","fontSize","lineHeight","gatsby_browser_entry","color","textDecoration","Content","styled","main","withConfig","displayName","componentId","Footer","props","className","Date","getFullYear","Layout","children","Fragment","header","footer","_755544856","node"],"mappings":"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","file":"component---src-pages-page-2-js-ebd3c54f984572996825.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst SecondPage = () => (\n  <Layout>\n    <SEO title=\"Page two\" />\n    <h1>Hi from the second page</h1>\n    <p>Welcome to page 2</p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport default SecondPage\n","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `StaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `StaticQuery`: https://gatsby.dev/staticquery\n */\n\nconst Image = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        placeholderImage: file(relativePath: { eq: \"ketchener-icon-blue.png\" }) {\n          childImageSharp {\n            fixed(width: 40, height: 40) {\n              ...GatsbyImageSharpFixed\n            }\n          }\n        }\n      }\n    `}\n    render={data =>\n      <Img\n        fixed={data.placeholderImage.childImageSharp.fixed}\n        style={{marginRight: 10}}\n        imgStyle={{margin: 0}}\n      />\n    }\n  />\n)\nexport default Image\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\nimport Image from './image';\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      backgroundColor: '#983939',\n      marginBottom: `1.5rem`,\n    }}\n  >\n    <div\n      style={{\n        display: 'flex',\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `0.5rem 1.0875rem`\n      }}\n    >\n      <Image />\n      <h1 style={{ margin: 0, fontSize: '2.2rem', lineHeight: '2.1rem' }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Content = styled.main`\r\n  margin: 0 auto;\r\n  max-width: 960px;\r\n  padding: 0 1.0875rem 1.45rem;\r\n  min-height: calc(100vh - 145px);\r\n`;\r\n\r\nexport default Content;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst _Footer = props =>\r\n  <div className={props.className}>\r\n    <footer>\r\n      www.ketchenerpost.com Â© {new Date().getFullYear()}, The Ketchener Post\r\n    </footer>\r\n  </div>\r\n\r\nconst Footer = styled(_Footer)`\r\n  height: 60px;\r\n  & footer {\r\n    margin: 0 auto;\r\n    max-width: 960px;\r\n    padding: 0 1.0875rem;\r\n    text-align: center;\r\n    line-height: 60px;\r\n  }\r\n`;\r\n\r\nexport default Footer;","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport Content from './content'\nimport Footer from './footer'\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <Content>\n          {children}\n        </Content>\n        <Footer />\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}