{"version":3,"sources":["webpack:///./src/templates/article.js","webpack:///./src/components/image.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["InnerHTML","styled","props","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","className","dangerouslySetInnerHTML","__html","html","_templateObject","ArticleQuery","Template","_props$data$markdownR","data","markdownRemark","_props$data$markdownR2","frontmatter","title","date","author","description","_components_layout__WEBPACK_IMPORTED_MODULE_4__","_components_seo__WEBPACK_IMPORTED_MODULE_5__","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","Image","react__WEBPACK_IMPORTED_MODULE_2___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","query","render","gatsby_image__WEBPACK_IMPORTED_MODULE_4___default","fixed","placeholderImage","childImageSharp","style","marginRight","imgStyle","margin","_public_static_d_2503262387_json__WEBPACK_IMPORTED_MODULE_1__","SEO","_ref","lang","meta","keywords","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","concat","length","join","defaultProps","propTypes","PropTypes","string","arrayOf","object","isRequired","Header","siteTitle","react_default","backgroundColor","marginBottom","maxWidth","padding","fontSize","components_image","gatsby_browser_entry","color","textDecoration","Layout","children","Fragment","header","paddingTop","Date","getFullYear","_755544856","node"],"mappings":"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","file":"component---src-templates-article-js-c60fc0c32e9dab930a63.js","sourcesContent":["import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport styled from 'styled-components';\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst _innerHTML = props =>\n  <div className={props.className} dangerouslySetInnerHTML={{__html: props.html}} />\n\nconst InnerHTML = styled(_innerHTML)`\n  & > .title-img > span {\n    margin: 0;\n  }\n`;\n\n\nconst Template = props => {\n  const {\n    html,\n    frontmatter: {\n      title,\n      date,\n      author,\n      description\n    }\n  } = props.data.markdownRemark;\n\n  return (\n    <Layout>\n      <SEO\n        title={title}\n        description={description}\n      />\n      <Link to=\"/\">Go Back</Link>\n      <h1>{title}</h1>\n      <InnerHTML html={html} />\n      <p>By {author} on {date}</p>\n    </Layout>\n  )\n}\n\nexport const ArticleQuery = graphql`\n  query ArticleByPath($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      frontmatter {\n        path\n        date\n        title\n        author\n        description\n      }\n    }\n  }\n`;\n\nexport default Template;","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `StaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `StaticQuery`: https://gatsby.dev/staticquery\n */\n\nconst Image = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        placeholderImage: file(relativePath: { eq: \"ketchener-icon.png\" }) {\n          childImageSharp {\n            fixed(width: 30, height: 30) {\n              ...GatsbyImageSharpFixed\n            }\n          }\n        }\n      }\n    `}\n    render={data =>\n      <Img\n        fixed={data.placeholderImage.childImageSharp.fixed}\n        style={{marginRight: 10}}\n        imgStyle={{margin: 0}}\n      />\n    }\n  />\n)\nexport default Image\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\nimport Image from './image';\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      backgroundColor: '#983939',\n      marginBottom: `1.5rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `0.5rem 1.0875rem`\n      }}\n    >\n      <h1 style={{ margin: 0, fontSize: '1.8rem' }}>\n        <Image />\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: `0 auto`,\n            maxWidth: 960,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0,\n          }}\n        >\n          <main>{children}</main>\n          <footer>\n            ketchenerpost.com © {new Date().getFullYear()},\n            {` `}\n            The Ketchener Post\n          </footer>\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}